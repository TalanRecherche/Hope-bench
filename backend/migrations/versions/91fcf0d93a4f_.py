"""empty message

Revision ID: 91fcf0d93a4f
Revises: 682c9e0b10af
Create Date: 2024-05-22 16:49:41.905036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '91fcf0d93a4f'
down_revision: Union[str, None] = '682c9e0b10af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

from sqlalchemy.engine.reflection import Inspector


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cvs', sa.Column('comm_languages', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('comm_educations', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('comm_certifications', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('comm_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('comm_general', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('cvs', sa.Column('label', sa.String(), nullable=True))
    op.add_column('cvs', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('cvs', sa.Column('primary_cv', sa.Boolean(), nullable=True))
    op.add_column('cvs', sa.Column('labelsAnnotation', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('cvs', sa.Column('originalFormat', sa.String(), nullable=True))
    op.alter_column('cvs', 'id_user',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('reviewers', sa.Column('id_user', sa.String(), nullable=False))
    op.drop_column('reviewers', 'id_users')
    op.add_column('templates', sa.Column('active', sa.Boolean(), nullable=True))
    
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if 'users' not in tables:
        op.create_table('users',
            sa.Column('id_users', sa.String(), nullable=False),
            sa.Column('firstname', sa.String(), nullable=False),
            sa.Column('lastname', sa.String(), nullable=False),
            sa.Column('id_manager', sa.String(), nullable=True),
            sa.Column('firstname_manager', sa.String(), nullable=True),
            sa.Column('lastname_manager', sa.String(), nullable=True),
            sa.PrimaryKeyConstraint('id_users')
        )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('templates', 'active')
    op.add_column('reviewers', sa.Column('id_users', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('reviewers', 'id_user')
    op.alter_column('cvs', 'id_user',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('cvs', 'labelsAnnotation')
    op.drop_column('cvs', 'primary_cv')
    op.drop_column('cvs', 'updated_at')
    op.drop_column('cvs', 'label')
    op.drop_column('cvs', 'status')
    op.drop_column('cvs', 'comm_general')
    op.drop_column('cvs', 'comm_skills')
    op.drop_column('cvs', 'comm_certifications')
    op.drop_column('cvs', 'comm_educations')
    op.drop_column('cvs', 'comm_languages')
    op.drop_column('cvs', 'originalFormat')

    op.drop_table('users')


    # ### end Alembic commands ###



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('cvs', 'status')
    # op.drop_table('users')
    # ### end Alembic commands ###