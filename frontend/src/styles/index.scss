// import du css de boostrap (format sass)
// cela permet d'avoir le bon affichage dans l'application
// et aussi de surcharger des variables (de taille, couleur) pour modifier globalement le rendu

// surcharge des variables de bootstrap
@import './variables';

//import de la police Inter
@import url('https://fonts.bunny.net/css2?family=Inter:wght@400;500;600;700&display=swap');


// import de bootstrap
@import "../node_modules/bootstrap/scss/bootstrap";
// surchage de bootstrap qui ne peut être fait par les variables
.offcanvas-header {
  background-color: $primary;
  color: white;

  .btn-close {
    @extend .btn-close-white;
  }
}

body {
  font-family: 'Inter', sans-serif;
}

// custom from bootstrap doc
.bd-callout {
  padding: 1.25rem;
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
  border: 1px solid $gray-200;
  border-left-width: .25rem;
  border-radius: .25rem;

  p:last-child {
    margin-bottom: 0
  }

  & + & {
    margin-top: -.25rem
  }

  &-info {
    border-left-color: $info;
  }

  &-warning {
    border-left-color: $warning;
  }

  &-danger {
    border-left-color: $danger;
  }

}


// custom input tag
// based on react-tagsinput exemple + merge with bootstrap input style
// https://github.com/olahol/react-tagsinput/blob/3.19.0/react-tagsinput.css
.react-tagsinput {
  @extend .form-control;
}

.react-tagsinput--focused {
  //@extend .form-control:focus;
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
  border-color: #86b7fe;
  outline: 0;
  box-shadow: $focus-ring-box-shadow;
}

.react-tagsinput-tag {
  background-color: #86b7fe;
  border-radius: 2px;
  color: white;
  display: inline-block;
  font-family: 'Inter',sans-serif;
  font-size: 13px;
  font-weight: 400;
  //margin-bottom: 5px;
  margin-right: 5px;
  padding: 0 0.5rem;
}

.react-tagsinput-remove {
  cursor: pointer;
  font-weight: bold;
  margin-left: 0.5rem;
}

.react-tagsinput-tag a::before {
  content: "×";
}

.react-tagsinput-tag a {
  text-decoration: none;
  color: white;
}

.react-tagsinput-input {
  background: transparent;
  border: 0;
  outline: none;
  min-width: 110px;
  width: 100%;

  //padding: 5px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--bs-body-color);
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.margin-top-32 {
  margin-top: 32px;
}

.dropdown-rounded > .btn {
  border-radius: 1rem;
}

.btn-icon {
  @extend .btn-light;
  @extend .rounded-circle;
  background-color: white;

  &-danger {
    @extend .btn-danger;
    @extend .rounded-circle;
  }

  &-warning {
    @extend .btn-warning;
    @extend .rounded-circle;
  }

  &-primary {
    @extend .btn-primary;
    @extend .rounded-circle;
  }

  &-secondary {
    @extend .btn-secondary;
    @extend .rounded-circle;
  }
}

// Affiche une étoile rouge à côté des labels des champs obligatoires
label:has(+ input:required):after {
  content: ' *';
  color: red;
}

// Affiche une checkbox au-dessus des titres des accordéons
// Fixe le problème de clic sur la checkbox qui déclenche l'ouverture de l'accordéon
.accordion-header:has(.accordion-checkbox) {
  position: relative;
}

.accordion-checkbox {
  position: absolute;
  top: 1rem;
  left: 1.25rem;
  z-index: 10;

  & + button {
    padding-left: 2.5rem;
  }
}

.my-accordion-body {
  background-color: #c8e6c9; /* Vert clair */;
  border-color: #7a0707;
  border-width: 5mm;

}

.my-accordion-header {
  background-color: #c8e6c9; /* Vert clair */;
}

// .my-accordion-body {
//   background-color: #c8e6c9; /* Vert clair */
// }
